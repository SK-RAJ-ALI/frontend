{"ast":null,"code":"var _jsxFileName = \"E:\\\\Weather Radar Display\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, ImageOverlay } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RALA_PNG_API = 'https://backend-vgio.onrender.com:10000/api/rala-png'; // Update to Render URL when deployed\n\nfunction App() {\n  _s();\n  const [imageUrl, setImageUrl] = React.useState(null);\n  const intervalRef = useRef();\n\n  // Example bounds for CONUS, adjust as needed\n  const bounds = [[24.396308, -125.0],\n  // Southwest\n  [49.384358, -66.93457] // Northeast\n  ];\n  useEffect(() => {\n    const fetchRALA = async () => {\n      try {\n        // To avoid caching, add a timestamp\n        setImageUrl(`${RALA_PNG_API}?t=${Date.now()}`);\n      } catch (err) {\n        setImageUrl(null);\n      }\n    };\n    fetchRALA();\n    intervalRef.current = setInterval(fetchRALA, 300000); // 5 min\n    return () => clearInterval(intervalRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Radar Display (MRMS RALA)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [37.8, -96],\n      zoom: 4,\n      scrollWheelZoom: true,\n      style: {\n        height: '80vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: imageUrl,\n        bounds: bounds,\n        opacity: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5w+KFVasLNL4kOnwm4+/2Iq+b1w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","MapContainer","TileLayer","ImageOverlay","L","jsxDEV","_jsxDEV","RALA_PNG_API","App","_s","imageUrl","setImageUrl","useState","intervalRef","bounds","fetchRALA","Date","now","err","current","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","scrollWheelZoom","style","height","width","attribution","url","opacity","_c","$RefreshReg$"],"sources":["E:/Weather Radar Display/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { MapContainer, TileLayer, ImageOverlay } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './App.css';\r\n\r\nconst RALA_PNG_API = 'https://backend-vgio.onrender.com:10000/api/rala-png'; // Update to Render URL when deployed\r\n\r\nfunction App() {\r\n  const [imageUrl, setImageUrl] = React.useState(null);\r\n  const intervalRef = useRef();\r\n\r\n  // Example bounds for CONUS, adjust as needed\r\n  const bounds = [\r\n    [24.396308, -125.0], // Southwest\r\n    [49.384358, -66.93457] // Northeast\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchRALA = async () => {\r\n      try {\r\n        // To avoid caching, add a timestamp\r\n        setImageUrl(`${RALA_PNG_API}?t=${Date.now()}`);\r\n      } catch (err) {\r\n        setImageUrl(null);\r\n      }\r\n    };\r\n    fetchRALA();\r\n    intervalRef.current = setInterval(fetchRALA, 300000); // 5 min\r\n    return () => clearInterval(intervalRef.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Weather Radar Display (MRMS RALA)</h1>\r\n      <MapContainer center={[37.8, -96]} zoom={4} scrollWheelZoom={true} style={{ height: '80vh', width: '100%' }}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {imageUrl && <ImageOverlay url={imageUrl} bounds={bounds} opacity={0.6} />}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,QAAQ,eAAe;AACrE,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAG,sDAAsD,CAAC,CAAC;;AAE7E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMC,WAAW,GAAGb,MAAM,CAAC,CAAC;;EAE5B;EACA,MAAMc,MAAM,GAAG,CACb,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC;EAAE;EACrB,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;EAAA,CACxB;EAEDf,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACAJ,WAAW,CAAC,GAAGJ,YAAY,MAAMS,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC;MAChD,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZP,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC;IACDI,SAAS,CAAC,CAAC;IACXF,WAAW,CAACM,OAAO,GAAGC,WAAW,CAACL,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;IACtD,OAAO,MAAMM,aAAa,CAACR,WAAW,CAACM,OAAO,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CrB,OAAA,CAACL,YAAY;MAAC2B,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAE;MAACC,IAAI,EAAE,CAAE;MAACC,eAAe,EAAE,IAAK;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAV,QAAA,gBAC1GjB,OAAA,CAACJ,SAAS;QACRgC,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,EACDjB,QAAQ,iBAAIJ,OAAA,CAACH,YAAY;QAACgC,GAAG,EAAEzB,QAAS;QAACI,MAAM,EAAEA,MAAO;QAACsB,OAAO,EAAE;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAAClB,EAAA,CApCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}